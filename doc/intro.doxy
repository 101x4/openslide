/*
 *  Wholeslide, a library for reading whole slide image files
 *
 *  Copyright (c) 2007-2008 Carnegie Mellon University
 *  All rights reserved.
 *
 *  Wholeslide is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, version 2.
 *
 *  Wholeslide is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with Wholeslide. If not, see <http://www.gnu.org/licenses/>.
 *
 *  Linking Wholeslide statically or dynamically with other modules is
 *  making a combined work based on Wholeslide. Thus, the terms and
 *  conditions of the GNU General Public License cover the whole
 *  combination.
 */

/** \mainpage Library for Whole Slide Image Access

\par
The wholeslide library is designed to provide high performance, read-only access to whole
slide images in a simple, vendor neutral fashion.

\par Key features:
<ul>
 <li>Vendor neutral</li>
 <li>Access to all pyramidal image layers through a single coordinate system</li>
 <li>Support for slide metadata</li>
</ul>

\section background Background

\par
Whole slide images, as used in digital pathology, are often too large
to fit completely into memory. At the same time, rapid random access
of these images is essential. Fortunately, whole slide images are
organized in a way that allows for efficient random access
horizontally, vertically, and across multiple zoom factors.  Sadly,
there is hardly a standard way for representing such images, and every
vendor seems to choose a unique and incompatible format.

This library exists to mitigate such vendor specific details in whole
slide images while preserving the beneficial optimizations present within.

\section qstart Quick Start

\par
<ol>
 <li>Open an image with ws_open().</li>
 <li>Fetch the list of layers with ws_get_layer_count() and ws_get_layer_name().</li>
 <li>Query the dimensions of the layers with ws_get_baseline_dimensions(),
     ws_get_layer_dimensions(), and ws_get_layer_downsample().</li>
 <li>Determine how much of a memory buffer to allocate with ws_get_region_num_bytes().</li>
 <li>(Optional) Give prefetch hints for soon-to-be-needed regions with
      ws_give_prefetch_hint().</li>
 <li>Fetch image regions with ws_read_region().</li>
 <li>Close the handle with ws_close().</li>
</ol>

\section decisions Design Decisions

\subsection coord Coordinate System

\par
The 


\subsection prefetch Prefetch Hints

\subsection layers Discrete Layers



*/
